name: Code Quality and Syntax Check

on:
  push:
    branches:
      - Master
  pull_request:
  schedule:
    - cron: '30 18 * * *' # 12:00 AM IST = 6:30 PM UTC

jobs:
  quality-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install necessary tools
      run: |
        pip install pyflakes yamllint

    - name: Install reviewdog
      run: |
        curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b /usr/local/bin

    - name: Syntax and Indent Check
      run: |
        echo "Running syntax check..."
        find . -name "*.py" -print0 | xargs -0 python -m py_compile

    - name: Check if YAML files changed
      id: yaml_changes
      run: |
        echo "Checking if any .yml or .yaml files changed..."
        git fetch origin ${{ github.event.before }}
        changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
        echo "$changed_files"
        if echo "$changed_files" | grep -E '\.ya?ml$'; then
          echo "yaml_changed=true" >> $GITHUB_ENV
        else
          echo "yaml_changed=false" >> $GITHUB_ENV
        fi

    - name: Run pyflakes with ReviewDog (Check)
      uses: reviewdog/action-pyflakes@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        reporter: github-check
        fail_on_error: true
        filter_mode: file
        level: warning

    - name: Run pyflakes with ReviewDog (PR Review)
      if: github.event_name == 'pull_request'
      uses: reviewdog/action-pyflakes@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        reporter: github-pr-review
        fail_on_error: false
        filter_mode: file
        level: warning

    - name: Run yamllint with ReviewDog manually (Check)
      if: env.yaml_changed == 'true'
      run: |
        echo "Running yamllint with reviewdog (check)..."
        yamllint -d "{extends: default, rules: {line-length: {max: 300}, colons: {max-spaces-before: 1}}}" -f parsable strings/langs || true | reviewdog -f=yamllint -name="yamllint" -reporter=github-check -level=warning
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Run yamllint with ReviewDog manually (PR Review)
      if: github.event_name == 'pull_request' && env.yaml_changed == 'true'
      run: |
        echo "Running yamllint with reviewdog (pr review)..."
        yamllint -d "{extends: default, rules: {line-length: {max: 300}, colons: {max-spaces-before: 1}}}" -f parsable strings/langs || true | reviewdog -f=yamllint -name="yamllint" -reporter=github-pr-review -level=warning
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
